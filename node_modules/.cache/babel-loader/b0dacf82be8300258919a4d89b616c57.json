{"ast":null,"code":"var _jsxFileName = \"/Users/ibubizm/Desktop/js/touchSoft/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Buttons from './components/buttons';\nimport { useRef, useState } from 'react';\nimport { Counter } from './components/Counter';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [counters, setCounters] = useState({});\n  const ref = useRef();\n\n  const onDelete = key => {\n    console.log(key);\n  };\n\n  const plusOne = result => {\n    if (result % 2) {}\n  };\n\n  console.log(counters);\n\n  const add = () => {\n    setCounters({ ...counters,\n      data: /*#__PURE__*/_jsxDEV(Counter, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this)\n    });\n  };\n\n  const sum = () => {\n    let sums = counters.reduce((accumulator, currentValue) => accumulator + currentValue.x, initialValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      ref: ref,\n      onClick: add,\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCounters([]),\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u043A\\u043E\\u043B\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0441\\u0447\\u0435\\u0442\\u0447\\u0438\\u043A\\u043E\\u0432 \", counters.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counters\",\n      children: counters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"uf3DtKK9wteGyXKUBr4mAkvE7Rg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ibubizm/Desktop/js/touchSoft/src/App.js"],"names":["Buttons","useRef","useState","Counter","App","counters","setCounters","ref","onDelete","key","console","log","plusOne","result","add","data","sum","sums","reduce","accumulator","currentValue","x","initialValue","length"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMK,GAAG,GAAGN,MAAM,EAAlB;;AAEA,QAAMO,QAAQ,GAAIC,GAAD,IAAS;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GAFD;;AAIA,QAAMG,OAAO,GAAIC,MAAD,IAAY;AAC1B,QAAIA,MAAM,GAAG,CAAb,EAAgB,CACf;AACF,GAHD;;AAIAH,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;;AAEA,QAAMS,GAAG,GAAG,MAAM;AAChBR,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEVU,MAAAA,IAAI,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAFI,KAAD,CAAX;AAID,GALD;;AAOA,QAAMC,GAAG,GAAG,MAAM;AAChB,QAAIC,IAAI,GAAGZ,QAAQ,CAACa,MAAT,CACT,CAACC,WAAD,EAAcC,YAAd,KAA+BD,WAAW,GAAGC,YAAY,CAACC,CADjD,EAETC,YAFS,CAAX;AAID,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,GAAG,EAAEf,GAAb;AAAkB,MAAA,OAAO,EAAEO,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAQ,MAAA,OAAO,EAAE,MAAMR,WAAW,CAAC,EAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,+IAA4BD,QAAQ,CAACkB,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBAA2BlB;AAA3B;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAtCQD,G;;KAAAA,G;AAwCT,eAAeA,GAAf","sourcesContent":["import Buttons from './components/buttons'\nimport { useRef, useState } from 'react'\nimport { Counter } from './components/Counter'\nimport './App.css'\n\nfunction App() {\n  const [counters, setCounters] = useState({})\n  const ref = useRef()\n\n  const onDelete = (key) => {\n    console.log(key)\n  }\n\n  const plusOne = (result) => {\n    if (result % 2) {\n    }\n  }\n  console.log(counters)\n\n  const add = () => {\n    setCounters({\n      ...counters,\n      data: <Counter />,\n    })\n  }\n\n  const sum = () => {\n    let sums = counters.reduce(\n      (accumulator, currentValue) => accumulator + currentValue.x,\n      initialValue\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <button ref={ref} onClick={add}>\n        add\n      </button>\n      <button onClick={() => setCounters([])}>reset</button>\n      <div>колличество счетчиков {counters.length}</div>\n      <div className=\"counters\">{counters}</div>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}