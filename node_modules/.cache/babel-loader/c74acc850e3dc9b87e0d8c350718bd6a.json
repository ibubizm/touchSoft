{"ast":null,"code":"var _jsxFileName = \"/Users/ibubizm/Desktop/js/touchSoft/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Buttons from './components/buttons';\nimport { useRef, useState } from 'react';\nimport { Counter } from './components/Counter';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [counters, setCounters] = useState([{\n    data: {},\n    value: 0\n  }]); // const [result, setResult] = useState(0)\n\n  const ref = useRef();\n\n  const onDelete = key => {\n    console.log(key);\n  };\n\n  const plusOne = (result, setResult) => {\n    if (result % 2) {\n      setResult(result + 1);\n    }\n\n    console.log(result);\n  };\n\n  console.log(counters);\n\n  const add = () => {\n    setCounters([...counters, /*#__PURE__*/_jsxDEV(Counter, {\n      plusOne: plusOne\n    }, Date.now(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 31\n    }, this)]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      ref: ref,\n      onClick: add,\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCounters([]),\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u043A\\u043E\\u043B\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0441\\u0447\\u0435\\u0442\\u0447\\u0438\\u043A\\u043E\\u0432 \", counters.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"counters\",\n      children: counters.map(i => {\n        i;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Faa7GIknC5UMAMhZLspP3dFXPtY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ibubizm/Desktop/js/touchSoft/src/App.js"],"names":["Buttons","useRef","useState","Counter","App","counters","setCounters","data","value","ref","onDelete","key","console","log","plusOne","result","setResult","add","Date","now","length","map","i"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,sBAApB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,sBAAxB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,CACvC;AACEK,IAAAA,IAAI,EAAE,EADR;AAEEC,IAAAA,KAAK,EAAE;AAFT,GADuC,CAAD,CAAxC,CADa,CAOb;;AACA,QAAMC,GAAG,GAAGR,MAAM,EAAlB;;AAEA,QAAMS,QAAQ,GAAIC,GAAD,IAAS;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GAFD;;AAIA,QAAMG,OAAO,GAAG,CAACC,MAAD,EAASC,SAAT,KAAuB;AACrC,QAAID,MAAM,GAAG,CAAb,EAAgB;AACdC,MAAAA,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT;AACD;;AACDH,IAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACD,GALD;;AAMAH,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;;AAEA,QAAMY,GAAG,GAAG,MAAM;AAChBX,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,eAAc,QAAC,OAAD;AAA0B,MAAA,OAAO,EAAES;AAAnC,OAAcI,IAAI,CAACC,GAAL,EAAd;AAAA;AAAA;AAAA;AAAA,YAAd,CAAD,CAAX;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAQ,MAAA,GAAG,EAAEV,GAAb;AAAkB,MAAA,OAAO,EAAEQ,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAQ,MAAA,OAAO,EAAE,MAAMX,WAAW,CAAC,EAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,+IAA4BD,QAAQ,CAACe,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACGf,QAAQ,CAACgB,GAAT,CAAcC,CAAD,IAAO;AACnBA,QAAAA,CAAC;AACF,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAxCQlB,G;;KAAAA,G;AA0CT,eAAeA,GAAf","sourcesContent":["import Buttons from './components/buttons'\nimport { useRef, useState } from 'react'\nimport { Counter } from './components/Counter'\nimport './App.css'\n\nfunction App() {\n  const [counters, setCounters] = useState([\n    {\n      data: {},\n      value: 0,\n    },\n  ])\n  // const [result, setResult] = useState(0)\n  const ref = useRef()\n\n  const onDelete = (key) => {\n    console.log(key)\n  }\n\n  const plusOne = (result, setResult) => {\n    if (result % 2) {\n      setResult(result + 1)\n    }\n    console.log(result)\n  }\n  console.log(counters)\n\n  const add = () => {\n    setCounters([...counters, <Counter key={Date.now()} plusOne={plusOne} />])\n  }\n\n  return (\n    <div className=\"App\">\n      <button ref={ref} onClick={add}>\n        add\n      </button>\n      <button onClick={() => setCounters([])}>reset</button>\n      <div>колличество счетчиков {counters.length}</div>\n      <div className=\"counters\">\n        {counters.map((i) => {\n          i\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}